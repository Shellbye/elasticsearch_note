
# https://logz.io/blog/nginx-access-log-monitoring-dashboard/
input {
    file {
        type => nginx_web
        path => "/var/log/nginx/*"
        exclude => "*.gz"
    }
    file {
        type => uwsgi_web
        path => ["/tmp/ocr_search.log"]
        path => ["/tmp/qs.log"]
    }
}

filter {
    if [type] == "nginx_web"  {
        grok {
            match => [ "message" , "%{COMBINEDAPACHELOG}+%{GREEDYDATA:extra_fields}"]
            overwrite => [ "message" ]
        }

        mutate {
            convert => ["response", "integer"]
            convert => ["bytes", "integer"]
            convert => ["responsetime", "float"]
        }

        geoip {
            source => "clientip"
            target => "geoip"
            add_tag => [ "nginx-geoip" ]
        }

        date {
            match => [ "timestamp" , "dd/MMM/YYYY:HH:mm:ss Z" ]
            remove_field => [ "timestamp" ]
        }

        useragent {
            source => "agent"
        }

        if [referrer] =~ /8602/ {
            drop {}
        }

        if [clientip] == "127.0.0.1" {
            drop {}
        }
    }
    else if [type] == "uwsgi_web" {
        grok {
            match => { "message" => "\[pid: %{NUMBER:pid}\|app: %{NUMBER:id}\|req: %{NUMBER:currentReq}/%{NUMBER:totalReq}\] %{IP:remoteAddr} \(%{WORD:remoteUser}?\) \{%{NUMBER:CGIVar} vars in %{NUMBER:CGISize} bytes\} \[%{DATA:timestamp}\] %{WORD:method} %{URIPATHPARAM:uri} \=\> generated %{NUMBER:resSize} bytes in %{NUMBER:resTime} msecs \(HTTP/%{NUMBER:httpVer} %{NUMBER:status}\) %{NUMBER:headers} headers in %{NUMBER:headersSize} bytes %{GREEDYDATA:coreInfo}" }
        }

        mutate {
            convert => ["status", "integer"]
            convert => ["resSize", "integer"]
            convert => ["resTime", "float"]
        }

        geoip {
            source => "remoteAddr"
            target => "geoip"
            add_tag => [ "uwsgi-geoip" ]
        }

        date {
            match => [ "timestamp", "EEE MMM d HH:mm:ss y", "EEE MMM  d HH:mm:ss y" ]
            remove_field => [ "timestamp" ]
        }

        if "_grokparsefailure" in [tags] {
            drop {}
        }
    }

}

output {
    if [type] == "nginx_web" {
        elasticsearch {
            hosts     => [ "localhost:9200" ]
            index    => "logstash-nginx-%{+YYYY.MM.dd}"
            user => "logstasher"
	        password => "123456"
        }
    }
    else if [type] == "uwsgi_web" {
        elasticsearch {
            hosts     => [ "localhost:9200" ]
            index    => "logstash-uwsgi-%{+YYYY.MM.dd}"
            user => "logstasher"
	        password => "123456"
        }
    }
}

